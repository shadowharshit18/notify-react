{"version":3,"sources":["Component/Header.js","Component/Home.js","Component/AddNotes.js","Services/Constants.js","Containers/AddNotes_container.js","Services/Action/Action.js","Component/Show.js","Component/AddTodo.js","Containers/AddTodo_container.js","Services/Action/ActionTodo.js","Component/Shownotes.js","Containers/ShowNotes_container.js","Component/Todolist.js","Component/TodoListDate.js","Component/Showtodo.js","Containers/ShowTodo_container.js","App.js","reportWebVitals.js","Services/Reducer/Root.js","Services/Reducer/Reducer.js","Services/Reducer/ReducerTodo.js","index.js"],"names":["Header","Navbar","bg","expand","className","to","Toggle","aria-controls","Collapse","id","Nav","Home","AddNotes","props","useState","noteText","setnoteText","noteSubject","setnoteSubject","Card","border","action","class","type","value","onChange","e","target","placeholder","for","Button","variant","onClick","addNoteHandler","note","subject","ADD_NOTES","ADD_TODO","REMOVE_NOTE","connect","state","dispatch","datanote","data_notes","addNotes","AddNote","Show","defaultActiveKey","Item","Link","AddTodo","notetodo","setTodo","notedate","setDate","notetime","setTime","addtodo","todo","date","time","datatodo","data_todo","addTodo","Shownotes","data","map","element","index","style","width","Body","Title","notes_and_todo","Text","removeEventHandler","deletenNote","Todolist","box","setBox","classnm","setClassNm","parseInt","line","defaultChecked","check","TodoListDate","Array","count","list","forEach","Showtodo","console","log","length","i","uniquedate","filter","self","indexOf","sort","App","exact","path","AddTodo_container","ShowNotes_container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","splice","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"uNAgCeA,MA7Bf,WACC,OACC,8BACG,eAACC,EAAA,EAAD,CAAQC,GAAG,UAAUC,OAAO,KAAKC,UAAU,YAA3C,UACA,cAAC,IAAD,CAAMA,UAAU,aAAaC,GAAG,IAAhC,oBAGA,cAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,cAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,mBAApB,SACC,eAACC,EAAA,EAAD,CAAKN,UAAU,UAAf,UAEE,cAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,YAA9B,uBAGA,cAAC,IAAD,CAAMD,UAAU,WAAWC,GAAG,WAA9B,uBAGA,cAAC,IAAD,CAAMD,UAAU,WAAWC,GAAG,oBAA9B,6B,OCDOM,MAlBf,WACI,OACI,8BACI,qBAAKP,UAAU,OAAf,SACI,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,kBAAf,UACA,sBAAMA,UAAU,YAAhB,+BADA,IAE6B,uBACzB,oF,wBCuCTQ,MA9Cf,SAAkBC,GACjB,MAA+BC,mBAAS,MAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAqCF,mBAAS,MAA9C,mBAAOG,EAAP,KAAmBC,EAAnB,KASA,OACC,qBAAKd,UAAU,UAAf,SACC,qBAAKA,UAAU,iCAAf,SACC,eAACe,EAAA,EAAD,CAAMf,UAAU,cAAcgB,OAAO,UAArC,UACC,cAACD,EAAA,EAAKnB,OAAN,CAAaI,UAAU,8BAAvB,uBAIA,qBAAKA,UAAU,uBAAf,SACC,qBAAKA,UAAU,YAAf,SACC,sBAAMiB,OAAO,GAAGC,MAAM,QAAtB,SACC,gCACC,uBAAOC,KAAK,OAAOnB,UAAU,sCAC7BoB,MAAOT,EAAUU,SAAU,SAACC,GAAD,OAAKV,EAAYU,EAAEC,OAAOH,QAAQI,YAAY,MACzE,uBAAOC,IAAI,GAAGzB,UAAU,iCAAxB,yBAIA,uBAAOmB,KAAK,OAAOnB,UAAU,2CAC7BoB,MAAOP,EAAaQ,SAAU,SAACC,GAAD,OAAKR,EAAeQ,EAAEC,OAAOH,QAAQI,YAAY,MAC/E,uBAAOC,IAAI,GAAGzB,UAAU,qCAAxB,sCAOJ,qBAAKA,UAAU,YAAf,SACC,cAAC0B,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QApC/B,WACCnB,EAAMoB,eAAe,CACpBC,KAAKnB,EACLoB,QAAQlB,IAETD,EAAY,IACZE,EAAe,KA8BX,iC,QCzCOkB,EAAU,YACVC,EAAS,WACTC,EAAY,cCUVC,eAPO,SAAAC,GAAK,MAAI,MAGN,SAAAC,GAAQ,MAAG,CAChCR,eAAe,SAAAS,GAAQ,OAAED,ECRP,SAACC,GAEnB,MAAM,CACFnB,KAAKa,EACLO,WAAWD,GDImBE,CAASF,QAGhCH,CAA4CM,GEI5CC,MAdf,WACC,OACC,qBAAK1C,UAAU,UAAf,SACC,eAACM,EAAA,EAAD,CAAKqB,QAAQ,OAAOgB,iBAAiB,QAArC,UACC,cAACrC,EAAA,EAAIsC,KAAL,UACA,eAACtC,EAAA,EAAIuC,KAAL,eAAW,cAAC,IAAD,CAAM5C,GAAG,8BAAT,mBAAX,SAEA,cAACK,EAAA,EAAIsC,KAAL,UACY,cAACtC,EAAA,EAAIuC,KAAL,UAAU,cAAC,IAAD,CAAM5C,GAAG,yBAAT,4BCuCX6C,MA/Cf,SAAiBrC,GACb,MAAyBC,mBAAS,MAAlC,mBAAOqC,EAAP,KAAgBC,EAAhB,KACA,EAAyBtC,mBAAS,MAAlC,mBAAOuC,EAAP,KAAgBC,EAAhB,KACA,EAAyBxC,mBAAS,MAAlC,mBAAOyC,EAAP,KAAgBC,EAAhB,KAYA,OACI,qBAAKpD,UAAU,UAAf,SACI,qBAAKA,UAAU,iCAAf,SACR,eAACe,EAAA,EAAD,CAAMf,UAAU,cAAcgB,OAAO,UAArC,UACC,cAACD,EAAA,EAAKnB,OAAN,CAAaI,UAAU,8BAAvB,uBAIA,qBAAKA,UAAU,wCAAf,SACe,qBAAKA,UAAU,YAAf,SACA,sBAAMiB,OAAO,GAAGjB,UAAU,OAA1B,SACA,gCACA,uBAAOmB,KAAK,OAAOC,MAAO2B,EAAU1B,SAAU,SAACC,GAAD,OAAK0B,EAAQ1B,EAAEC,OAAOH,QAAQpB,UAAU,uBAAuBwB,YAAY,MACzH,uBAAOC,IAAI,GAAGzB,UAAU,cAAxB,iCAEA,uBAAOmB,KAAK,OAAOC,MAAO6B,EAAW5B,SAAU,SAACC,GAAD,OAAK4B,EAAQ5B,EAAEC,OAAOH,QAAQpB,UAAU,4BAA4BwB,YAAY,MAC/H,uBAAOC,IAAI,GAAGzB,UAAU,mBAAxB,4BACA,uBAAOmB,KAAK,OAAOC,MAAO+B,EAAU9B,SAAU,SAACC,GAAD,OAAK8B,EAAQ9B,EAAEC,OAAOH,QAAQpB,UAAU,6CAA6CwB,YAAY,MAC/I,uBAAOC,IAAI,GAAGzB,UAAU,oCAAxB,qCAKA,qBAAKA,UAAU,YAAf,SACA,cAAC0B,EAAA,EAAD,CAAQE,QAnCxB,WACFnB,EAAM4C,QAAQ,CACbC,KAAKP,EACIQ,KAAKN,EACLO,KAAKL,IAETH,EAAQ,IACRE,EAAQ,IACRE,EAAQ,KA2BkCzB,QAAQ,UAAtC,iCC7BLQ,eAPO,SAAAC,GAAK,MAAI,MAGN,SAAAC,GAAQ,MAAG,CAChCgB,QAAQ,SAAAI,GAAQ,OAAEpB,ECRD,SAACoB,GAElB,MAAM,CACFtC,KAAKc,EACLyB,UAAUD,GDIaE,CAAQF,QAGxBtB,CAA4CW,GEmB5Cc,MA9Bf,SAAmBnD,GAMlB,OACC,qBAAKT,UAAU,uBAAf,SACES,EAAMoD,KAAKC,KAAI,SAACC,EAAUC,GAAX,OAGf,cAACjD,EAAA,EAAD,CAAMkD,MAAO,CAAEC,MAAO,SAAWlE,UAAU,aAA3C,SACC,eAACe,EAAA,EAAKoD,KAAN,WACC,cAACpD,EAAA,EAAKqD,MAAN,CAAYpE,UAAU,aAAtB,SAAoC+D,EAAQM,eAAevC,OAC3D,uBACA,cAACf,EAAA,EAAKuD,KAAN,UAAYP,EAAQM,eAAetC,UACnC,cAACL,EAAA,EAAD,CAAQE,QAAS,kBAChBnB,EAAM8D,mBAAmB,CACxBV,KAAKE,EACL1D,GAAG2D,KAEDrC,QAAQ,UALZ,+BCPSQ,eAPO,SAAAC,GAAK,MAAG,CAC1ByB,KAAKzB,EAAMiC,mBAEU,SAAAhC,GAAQ,MAAG,CAChCkC,mBAAmB,SAAAjC,GAAQ,OAAED,ENCR,SAACC,GAEtB,MAAM,CACFnB,KAAKe,EACLK,WAAWD,GMLuBkC,CAAYlC,QAGvCH,CAA4CyB,GCyC3Ca,MAjDhB,SAAkBhE,GACd,MAAmBC,oBAAS,GAA5B,mBAAOgE,EAAP,KAAWC,EAAX,KACA,EAA2BjE,mBAAS,IAApC,mBAAOkE,EAAP,KAAeC,EAAf,KACA,EAAuBnE,mBAAS,IAAhC,mBA0BA,OA1BA,UAYOoE,SAASrE,EAAMsE,KAAKf,OAAO,GAAG,GAAc,IAATY,GACjCC,EAAW,QACXC,SAASrE,EAAMsE,KAAKf,OAAO,GAAG,GAAc,IAATY,GACnCC,EAAW,OACXC,SAASrE,EAAMsE,KAAKf,OAAO,GAAG,GAAc,IAATY,GACnCC,EAAW,SACXC,SAASrE,EAAMsE,KAAKf,OAAO,GAAG,GAAc,IAATY,GACnCC,EAAW,UACXC,SAASrE,EAAMsE,KAAKf,OAAO,GAAG,GAAc,IAATY,GACnCC,EAAW,QAMhB,qBAAM7E,UAAU,aAAhB,SACA,gCACA,+BACA,+BAAI,uBAAMkB,MAAM,mBAAZ,UAAgCT,EAAMsE,KAAKvB,KAA3C,OAAJ,cACA,+BAAI,uBACAxD,UAAU,mBACVgF,eAAgBN,EAChBvD,KAAK,WACLE,SAAU,kBAlClB,SAAeqD,GACH,GAALA,GACCC,GAAO,GACPE,EAAW,aAGXF,GAAO,GACPE,EAAW,KA2BGI,CAAMP,IACpBrE,GAAG,qBALP,WAOY,sBACZL,UAAW4E,EADC,SAEVnE,EAAMsE,KAAKzB,kBCfN4B,MA7Bf,SAAsBzE,GAClB,IAAMsE,EAAO,IAAII,MAEbC,GADS,IAAID,MACL,GAcZ,OAZA1E,EAAM4E,KAAKC,SAAQ,SAAAvB,GACZA,EAAQT,KAAKC,MAAM9C,EAAM8C,OACxBwB,EAAKK,GAAO,CACR9B,KAAKS,EAAQT,KAAKA,KAClBE,KAAKO,EAAQT,KAAKE,KAClBQ,MAAMoB,GAGVA,GAAY,MAKhB,gCACI,sBAAMpF,UAAU,qBAAhB,SAAsCS,EAAM8C,OAExCwB,EAAKjB,KAAI,SAACxC,GAAD,OACL,cAAC,EAAD,CAAUyD,KAAMzD,WCgBrBiE,MArCf,SAAkB9E,GACjB+E,QAAQC,IAAIhF,EAAMoD,KAAK,IACvB,IAAMN,EAAO,IAAI4B,MAEjB,GAAyB,GAArB1E,EAAMoD,KAAK6B,OACd,IAAI,IAAIC,EAAE,EAAEA,EAAElF,EAAMoD,KAAK6B,OAAOC,IAC/BpC,EAAKoC,GAAGlF,EAAMoD,KAAK8B,GAAGrC,KAAKC,KAM7B,IAAIqC,EAAarC,EAAKsC,QAHtB,SAAoBzE,EAAO4C,EAAO8B,GACjC,OAAOA,EAAKC,QAAQ3E,KAAW4C,KAiBhC,OAdA4B,EAAWI,OACXR,QAAQC,IAAIlC,GAcX,8BACEqC,EAAW9B,KAAI,SAACxC,GAAD,OACf,cAAC,EAAD,CAAciC,KAAMjC,EAAG+D,KAAM5E,EAAMoD,aCrBxB1B,eARO,SAAAC,GAAK,MAAG,CAC1ByB,KAAKzB,EAAMkB,SAGU,SAAAjB,GAAQ,MAAG,KAIrBF,CAA4CyB,GC2B5CqC,MA7Bf,WACC,OACC,qBAAKjG,UAAU,MAAf,SACI,eAAC,IAAD,WAEA,cAAC,EAAD,IACA,cAAC,IAAD,CAAOkG,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,oBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,8BAAZ,SACE,cAACE,EAAD,MAEF,cAAC,IAAD,CAAOF,KAAK,yBAAZ,SACE,cAAC,EAAD,YCnBOG,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,gBCJCQ,kBAAgB,CAC3B1C,eCAW,WAAgC,IAAjBjC,EAAgB,uDAAV,GAAGnB,EAAO,uCAC1C,OAAQA,EAAOE,MACX,KAAKa,EAED,OADAwD,QAAQC,IAAIxE,GACN,GAAN,mBACOmB,GADP,CAEI,CAACiC,eAAepD,EAAOsB,cAI3B,KAAKL,EAGD,OADAE,EAAM4E,OAAO/F,EAAOsB,WAAWlC,GAAG,GAClC,YACO+B,GAGf,QACK,OAAOA,IDlBDkB,KEFJ,WAAmC,IAAjBlB,EAAgB,uDAAV,GAAGnB,EAAO,uCAE7C,OAAQA,EAAOE,MACP,KAAKc,EAEL,MAAM,GAAN,mBACOG,GADP,CAEI,CAACkB,KAAKrC,EAAOyC,aAIrB,QACK,OAAOtB,MCLd6E,EAAQC,YAAYC,GAE1BC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.6b7bc2ec.chunk.js","sourcesContent":["import { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Link, BrowserRouter,Route } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t\t\t<Navbar bg=\"primary\" expand=\"lg\" className=\"fixed-top\">\r\n\t\t\t\t\t<Link className=\"nav-header\" to=\"/\">\r\n\t\t\t\t\t\tNotify\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Link className=\"nav-item\" to=\"/addnotes\">\r\n\t\t\t\t\t\t\t\t\tAdd Notes\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t<Link className=\"nav-item\" to=\"/addtodo\">\r\n\t\t\t\t\t\t\t\t\tAdd To-Do\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t<Link className=\"nav-item\" to=\"/shownotesandtodo\">\r\n\t\t\t\t\t\t\t\t\tShow\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t</Navbar.Collapse>\r\n\t\t\t\t</Navbar>\r\n        \r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","\r\nfunction Home() {\r\n    return(\r\n        <div>\r\n            <div className=\"home\">\r\n                <div className=\"landing-text\">\r\n                    <div className=\"background-drop\">\r\n                    <span className=\"font-size\">\r\n                        Welcome to Notify</span> <br/>\r\n                        <span>We Stroe all your Notes and TO-DO Task</span>\r\n                    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Home;","import { Card, Button, Form, FloatingLabel } from \"react-bootstrap\";\r\nimport {useState} from \"react\"\r\nfunction AddNotes(props) {\r\n\tconst [noteText,setnoteText] = useState(null)\r\n\tconst [noteSubject,setnoteSubject] = useState(null)\r\n\tfunction addnote_btn(){\r\n\t\tprops.addNoteHandler({\r\n\t\t\tnote:noteText,\r\n\t\t\tsubject:noteSubject\r\n\t\t})\r\n\t\tsetnoteText(\"\")\r\n\t\tsetnoteSubject(\"\")\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"deafult\">\r\n\t\t\t<div className=\"container-fluid mt-3 height-45\">\r\n\t\t\t\t<Card className=\"text-center\" border=\"primary\">\r\n\t\t\t\t\t<Card.Header className=\"bg-primary font-color-white\">\r\n\t\t\t\t\t\tAdd Notes\r\n\t\t\t\t\t</Card.Header>\r\n\r\n\t\t\t\t\t<div className=\"mt-4 mb-4 ml-4 mr-4 \">\r\n\t\t\t\t\t\t<div className=\"form__div\">\r\n\t\t\t\t\t\t\t<form action=\"\" class=\"form \">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form__input margin-left-right-notes\" \r\n\t\t\t\t\t\t\t\t\tvalue={noteText} onChange={(e)=>setnoteText(e.target.value)} placeholder=\" \" />\r\n\t\t\t\t\t\t\t\t\t<label for=\"\" className=\"form__label margin-left-right \">\r\n\t\t\t\t\t\t\t\t\t\tAdd Subject\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form__input mt-8 margin-left-right-notes\" \r\n\t\t\t\t\t\t\t\t\tvalue={noteSubject} onChange={(e)=>setnoteSubject(e.target.value)} placeholder=\" \" />\r\n\t\t\t\t\t\t\t\t\t<label for=\"\" className=\"margin-left-right form__label mt-8\">\r\n\t\t\t\t\t\t\t\t\t\tWrite Note Here\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mb-4 mt-8\">\r\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={addnote_btn}>Add Notes</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default AddNotes;\r\n","export const ADD_NOTES=\"ADD_NOTES\"\r\nexport const ADD_TODO=\"ADD_TODO\"\r\nexport const REMOVE_NOTE=\"REMOVE_NOTE\"","import AddNote from '../Component/AddNotes'\r\nimport {connect} from 'react-redux'\r\n\r\nimport { addNotes } from '../Services/Action/Action'\r\n\r\nconst mapStateToProps=state =>({\r\n\r\n})\r\nconst mapDispatchToProps=dispatch=>({\r\n    addNoteHandler:datanote=>dispatch(addNotes(datanote))\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddNote)","import {ADD_NOTES,ADD_TODO,REMOVE_NOTE} from '../Constants'\r\nexport const addNotes=(datanote)=>{\r\n    // console.log(data)\r\n    return{\r\n        type:ADD_NOTES,\r\n        data_notes:datanote\r\n    }\r\n}\r\nexport const deletenNote=(datanote)=>{\r\n    // console.log(datanote)\r\n    return{\r\n        type:REMOVE_NOTE,\r\n        data_notes:datanote\r\n    }\r\n}","import { Nav } from \"react-bootstrap\";\r\nimport {Link} from 'react-router-dom'\r\nfunction Show() {\r\n\treturn (\r\n\t\t<div className=\"deafult\">\r\n\t\t\t<Nav variant=\"tabs\" defaultActiveKey=\"/home\">\r\n\t\t\t\t<Nav.Item>\r\n\t\t\t\t<Nav.Link>\t<Link to='/shownotesandtodo/notesshow'>Notes</Link> </Nav.Link>\r\n\t\t\t\t</Nav.Item>\r\n\t\t\t\t<Nav.Item>\r\n                <Nav.Link><Link to='/shownotesandtodo/todo'>ToDo</Link></Nav.Link>\r\n\t\t\t\t</Nav.Item>\r\n\t\t\t</Nav>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Show;\r\n","import { Card, Button, Form, FloatingLabel } from \"react-bootstrap\";\r\nimport {useState} from 'react'\r\nfunction AddTodo(props) {\r\n    const [notetodo,setTodo]=useState(null);\r\n    const [notedate,setDate]=useState(null);\r\n    const [notetime,setTime]=useState(null);\r\n    function addnote_btn(){\r\n\t\tprops.addtodo({\r\n\t\t\ttodo:notetodo,\r\n            date:notedate,\r\n            time:notetime\r\n\t\t})\r\n        setTodo(\"\")\r\n        setDate(\"\")\r\n        setTime(\"\")\r\n\t\t\r\n\t}\r\n    return(\r\n        <div className=\"deafult\">\r\n            <div className=\"container-fluid mt-3 height-45\">\r\n\t\t\t\t<Card className=\"text-center\" border=\"primary\">\r\n\t\t\t\t\t<Card.Header className=\"bg-primary font-color-white\">\r\n\t\t\t\t\t\tAdd Notes\r\n\t\t\t\t\t</Card.Header>\r\n                    \r\n\t\t\t\t\t<div className=\"mt-4 mb-4 ml-5 mr-4 margin-left-right\">\r\n                    <div className=\"form__div\">\r\n                    <form action=\"\" className=\"form\">\r\n                    <div>\r\n                    <input type=\"text\" value={notetodo} onChange={(e)=>setTodo(e.target.value)} className=\"form__input width-94\" placeholder=\" \"/>\r\n                    <label for=\"\" className=\"form__label\" >Enter the task here</label>\r\n                  \r\n                    <input type=\"date\" value={notedate}  onChange={(e)=>setDate(e.target.value)} className=\"form__input mt-8 width-45\" placeholder=\" \"/>\r\n                    <label for=\"\" className=\"form__label mt-8\">Enter the date</label>\r\n                    <input type=\"time\" value={notetime} onChange={(e)=>setTime(e.target.value)} className=\"form__input mt-8 width-45 todo-time-holder\" placeholder=\" \"/>\r\n                    <label for=\"\" className=\"form__label mt-8 todo-time-holder\">Enter the time</label>\r\n                    </div>\r\n                    </form>\r\n                </div>\r\n\t\t\t\t\t</div>\r\n                    <div className=\"mb-4 mt-8\">\r\n                    <Button onClick={addnote_btn} variant=\"primary\">Add To-Do</Button>\r\n                    </div>\r\n\t\t\t\t\t\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddTodo;","import AddTodo from '../Component/AddTodo'\r\nimport {connect} from 'react-redux'\r\n\r\nimport { addTodo } from '../Services/Action/ActionTodo'\r\n\r\nconst mapStateToProps=state =>({\r\n\r\n})\r\nconst mapDispatchToProps=dispatch=>({\r\n    addtodo:datatodo=>dispatch(addTodo(datatodo))\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddTodo)","import {ADD_TODO} from '../Constants'\r\nexport const addTodo=(datatodo)=>{\r\n    \r\n    return{\r\n        type:ADD_TODO,\r\n        data_todo:datatodo\r\n    }\r\n}","import { Card,Button } from \"react-bootstrap\";\r\nfunction Shownotes(props) {\r\n\t\r\n\tfunction deletebtn(ele,i) {\r\n\t\tconsole.log(ele,i) \r\n\t\t\r\n\t }\r\n\treturn (\r\n\t\t<div className=\"row container-fluid \">\r\n\t\t\t{props.data.map((element , index) => (\r\n\t\t\t\r\n\r\n\t\t\t\t<Card style={{ width: \"18rem\" }} className=\"show_notes\">\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Card.Title className=\"fontheader\">{element.notes_and_todo.note}</Card.Title>\r\n\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t<Card.Text>{element.notes_and_todo.subject}</Card.Text>\r\n\t\t\t\t\t\t<Button onClick={()=>(\r\n\t\t\t\t\t\t\tprops.removeEventHandler({\r\n\t\t\t\t\t\t\t\tdata:element,\r\n\t\t\t\t\t\t\t\tid:index\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t)} variant=\"primary\">Delete</Button>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Shownotes;\r\n","import { connect } from \"react-redux\";\r\nimport Shownotes from \"../Component/Shownotes\"\r\nimport { deletenNote } from '../Services/Action/Action'\r\nconst mapStateToProps=state=>({\r\n    data:state.notes_and_todo\r\n})\r\nconst mapDispatchToProps=dispatch=>({\r\n    removeEventHandler:datanote=>dispatch(deletenNote(datanote))\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Shownotes)","import { useState } from \"react\"\r\n\r\nfunction Todolist(props){\r\n    const [box,setBox]=useState(false)\r\n    const [classnm,setClassNm]=useState(\"\")\r\n    const [color,setColor]=useState(\"\")    \r\n    function check(box) { \r\n        if(box==false){\r\n            setBox(true);\r\n            setClassNm(\"textcut\")\r\n        }\r\n        else{\r\n            setBox(false);\r\n            setClassNm(\"\")\r\n        }\r\n     }\r\n     \r\n        if(parseInt(props.line.index)%5==0 && classnm==\"\"){\r\n             setClassNm(\"blue\")\r\n         }if(parseInt(props.line.index)%5==1 && classnm==\"\"){\r\n             setClassNm(\"red\")\r\n         }if(parseInt(props.line.index)%5==2 && classnm==\"\") {\r\n             setClassNm(\"green\")\r\n         }if(parseInt(props.line.index)%5==3 && classnm==\"\"){\r\n             setClassNm(\"yellow\")\r\n         }if(parseInt(props.line.index)%5==4 && classnm==\"\"){\r\n             setClassNm(\"pink\")}\r\n     \r\n    \r\n    // console.log(\"todolist\",props)\r\n    \r\n    return(\r\n        <div  className=\"tablealign\">\r\n        <table>\r\n        <tr>\r\n        <td><span class=\"badge bg-primary\">{props.line.time} </span>&nbsp;&nbsp;</td>\r\n        <td><input\r\n            className=\"form-check-input\"\r\n            defaultChecked={box}\r\n            type=\"checkbox\"\r\n            onChange={()=>check(box)}\t\r\n            id=\"flexCheckDefault\"\r\n            />\r\n        &nbsp;&nbsp;<span \r\n        className={classnm} \r\n        >{props.line.todo}</span></td></tr>\r\n        </table>\r\n    </div>\r\n    )\r\n}\r\n\r\n export default Todolist;","import Todolist from \"./Todolist\";\r\nfunction TodoListDate(props){\r\n    const line = new Array();\r\n    const time = new Array();\r\n    var count = 0\r\n    // console.log(props.list)\r\n    props.list.forEach(element => {\r\n        if(element.todo.date==props.date){\r\n            line[count]={\r\n                todo:element.todo.todo,\r\n                time:element.todo.time,\r\n                index:count\r\n            }\r\n            \r\n            count=count+1\r\n        }\r\n    });\r\n    // console.log(line);\r\n    return(\r\n        <div>\r\n            <span className=\"badge bg-secondary\">{props.date}</span>\r\n            {\r\n                line.map((e)=>(\r\n                    <Todolist line={e}  />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoListDate;","\r\nimport TodoListDate from \"./TodoListDate\";\r\nfunction Showtodo(props) {\r\n\tconsole.log(props.data[0]);\r\n\tconst date = new Array();\r\n\t\r\n\tif (props.data.length != 0) {\r\n\t\tfor(var i=0;i<props.data.length;i++){\r\n\t\t\tdate[i]=props.data[i].todo.date\r\n\t\t}\r\n\t}\r\n\tfunction onlyUnique(value, index, self) {\r\n\t\treturn self.indexOf(value) === index;\r\n\t  }\r\n\tvar uniquedate = date.filter(onlyUnique);\r\n\tuniquedate.sort();\r\n\tconsole.log(date);\r\n\t\r\n\t\r\n\t// for(var i=0;i<props.data.length;i++){\r\n\t// \tdate.forEach(element => {\r\n\t// \t\tif(props.data[i].todo.date!=element){\r\n\t// \t\t\tdate[count]=props.data[i].todo.date;\r\n\t// \t\t\tcount=count+1;\r\n\t// \t\t}\r\n\t// \t});\r\n\t// }\r\n\t// console.log(date);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{uniquedate.map((e)=>(\r\n\t\t\t\t<TodoListDate date={e} list={props.data}/>\r\n\t\t\t))}\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Showtodo;\r\n","import { connect } from \"react-redux\";\r\nimport Shownotes from \"../Component/Showtodo\"\r\n\r\nconst mapStateToProps=state=>({\r\n    data:state.todo\r\n})\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Shownotes)","import \"./App.css\";\nimport Header from \"./Component/Header\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Home from \"./Component/Home\";\nimport AddNotesContainer from \"./Containers/AddNotes_container\"\nimport Show from \"./Component/Show\";\nimport AddTodo_container from \"./Containers/AddTodo_container\"\nimport ShowNotes_container from \"./Containers/ShowNotes_container\";\nimport ShowTodo from \"./Containers/ShowTodo_container\"\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n      <BrowserRouter>\n\t\t\t\n      <Header />\n      <Route exact path=\"/\">\n        <Home/>\n      </Route>\n      <Route path=\"/addnotes\">\n        <AddNotesContainer/>\n      </Route>\n      <Route path=\"/addtodo\">\n        <AddTodo_container/>\n      </Route>\n      <Route path=\"/shownotesandtodo\">\n        <Show/>\n      </Route>\n      <Route path=\"/shownotesandtodo/notesshow\">\n        <ShowNotes_container />\n      </Route>\n      <Route path=\"/shownotesandtodo/todo\">\n        <ShowTodo />\n      </Route>\n      </BrowserRouter>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from 'redux'\r\nimport notes_and_todo from './Reducer'\r\nimport todo from './ReducerTodo'\r\nexport default combineReducers({\r\n    notes_and_todo,todo,\r\n})","import {ADD_NOTES,ADD_TODO,REMOVE_NOTE} from '../Constants'\r\nconst initialState={\r\n    notes_and_todo:[]\r\n}\r\nexport default function notes(state=[],action){\r\n    switch (action.type) {\r\n        case ADD_NOTES:\r\n            console.log(action)\r\n            return[\r\n                ...state,\r\n                {notes_and_todo:action.data_notes}\r\n            ]\r\n            console.log(state);\r\n            break;\r\n            case REMOVE_NOTE:\r\n                // console.log(action)\r\n                state.splice(action.data_notes.id,1)\r\n                return[\r\n                    ...state\r\n                    \r\n                ]\r\n        default:\r\n             return state\r\n            break;\r\n            \r\n    \r\n    } \r\n}","import {ADD_TODO} from '../Constants'\r\n\r\nexport default function todofunc(state=[],action){\r\n   \r\n    switch (action.type) {\r\n            case ADD_TODO:\r\n                // console.log(action)\r\n            return[\r\n                ...state,\r\n                {todo:action.data_todo}\r\n            ]\r\n            break;\r\n    \r\n        default:\r\n             return state\r\n            break;\r\n    }\r\n    \r\n} ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './Services/Reducer/Root'\nconst store = createStore(rootReducer)\n// console.log(store);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}